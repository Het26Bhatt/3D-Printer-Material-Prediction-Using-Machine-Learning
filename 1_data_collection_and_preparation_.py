# -*- coding: utf-8 -*-
"""MileStone 1: Data collection and Preparation .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DjCxGOF7W3VkIZiJh230LvOrM-D8yY7r
"""

# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.neighbors import KNeighborsClassifier
from xgboost import XGBClassifier
from sklearn.naive_bayes import GaussianNB

data = pd.read_csv('/content/adxl_data/ADXL345_SensorData.csv')

data.head()

data.shape

data.isna().sum()

data.info()

data['Error_found']=data['Error_found'].map({'no': 0,'yes': 1})

plt.figure(figsize=(20, 8))
sns.boxplot(data=data, orient='h')
plt.title("Boxplot")
plt.xlabel('values')
plt.ylabel('Variables')
plt.show()

def replace_outliers_with_mean_percentile(data,lower_percentile=5, upper_percentile=95):
  for column in data.select_dtypes(include='number').columns:

    lower_bound = np.percentile(data[column], lower_percentile)
    upper_bound = np.percentile(data[column], upper_percentile)

    outliers= (data[column] < lower_bound) | (data[column] > upper_bound)
    data.loc[outliers, column] = data[column].mean()

replace_outliers_with_mean_percentile(data)

plt.figure(figsize=(20, 8))
sns.boxplot(data=data, orient='h')
plt.title("Boxplot (After Outlier Treatment)")
plt.xlabel('Values')
plt.ylabel('Variables')
plt.show()